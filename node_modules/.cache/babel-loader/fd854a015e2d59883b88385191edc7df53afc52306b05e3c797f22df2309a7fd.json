{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapMutations, mapState } from \"vuex\";\nimport { verifyPwd, resetUserPwd } from \"@/api/system/user\";\nexport default {\n  data() {\n    // 验证密码\n    var checkPassword = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请输入密码\"));\n      }\n      verifyPwd(value).then(response => {\n        if (response === true) {\n          callback();\n        } else {\n          callback(new Error(\"原密码错误\"));\n        }\n      });\n    };\n    var samePassword = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== this.form.newPassword) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      dialogVisible: false,\n      form: {\n        oldPassword: \"\",\n        newPassword: \"\",\n        checkPassword: \"\"\n      },\n      rules: {\n        newPassword: [{\n          required: true,\n          message: \"请输入新密码\",\n          trigger: \"blur\"\n        }],\n        oldPassword: [{\n          validator: checkPassword,\n          trigger: \"blur\"\n        }, {\n          required: true,\n          message: \"请输入新密码\",\n          trigger: \"blur\"\n        }],\n        checkPassword: [{\n          validator: samePassword,\n          trigger: \"blur\"\n        }, {\n          required: true,\n          message: \"请输入新密码\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  computed: {\n    avatar() {\n      return this.$store.state.user.avatar || require(\"@/assets/user-default.png\");\n    }\n  },\n  methods: {\n    ...mapMutations(\"tab\", [\"collapseMenu\"]),\n    onSubmit() {\n      resetUserPwd(this.form.newPassword).then(() => {\n        this.$message({\n          showClose: true,\n          message: '修改成功，请重新登录',\n          type: 'success'\n        });\n        setTimeout(() => {\n          handleLogout();\n        }, 1000);\n        handleLogout();\n      });\n    },\n    cancel() {\n      this.resetForm();\n      this.dialogVisible = false;\n    },\n    resetForm() {\n      this.form.oldPassword = \"\";\n      this.form.newPassword = \"\";\n      this.form.checkPassword = \"\";\n    },\n    handleLogout() {\n      this.$store.dispatch(\"LogOut\").then(result => {\n        this.$store.dispatch(\"FedLogOut\").then(result => {\n          this.$router.push({\n            path: \"/login\"\n          });\n        });\n      }).catch(err => {});\n    },\n    handleCommand(command) {\n      if (command === \"exit\") {\n        handleLogout();\n      }\n      if (command === \"updatePassword\") {\n        this.dialogVisible = true;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAgDA;AACA;AACA;EACAA;IACA;IACA;MACA;QACAC;MACA;MACAC;QACA;UACAD;QACA;UACAA;QACA;MACA;IACA;IACA;MACA;QACAA;MACA;QACAA;MACA;QACAA;MACA;IACA;IACA;MACAE;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAF,cACA;UAAAG;UAAAC;UAAAC;QAAA,EACA;QACAN,cACA;UAAAO;UAAAD;QAAA,GACA;UAAAF;UAAAC;UAAAC;QAAA,EACA;QACAJ,gBACA;UAAAK;UAAAD;QAAA,GACA;UAAAF;UAAAC;UAAAC;QAAA;MAEA;IACA;EACA;EACAE;IACAC;MACA,OACA;IAEA;EACA;EACAC;IACA;IACAC;MACAC;QACA;UACAC;UACAR;UACAS;QACA;QACAC;UACAC;QACA;QACAA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAF;MACA,YACAG,mBACAC;QACA;UACA;YAAAC;UAAA;QACA;MACA,GACAC;IACA;IACAC;MACA;QACAP;MACA;MACA;QACA;MACA;IACA;EACA;AACA","names":["data","callback","verifyPwd","dialogVisible","form","oldPassword","newPassword","checkPassword","rules","required","message","trigger","validator","computed","avatar","methods","onSubmit","resetUserPwd","showClose","type","setTimeout","handleLogout","cancel","resetForm","dispatch","then","path","catch","handleCommand"],"sourceRoot":"src/components","sources":["Header.vue"],"sourcesContent":["<template>\r\n  <div class=\"header-container\">\r\n    <div class=\"l-container\">\r\n      <el-button\r\n        @click=\"collapseMenu()\"\r\n        icon=\"el-icon-menu\"\r\n        size=\"mini\"\r\n      ></el-button>\r\n    </div>\r\n    <div class=\"r-container\">\r\n      <el-dropdown @command=\"handleCommand\">\r\n        <span class=\"el-dropdown-link\">\r\n          <img class=\"user\" :src=\"avatar\" alt=\"\" />\r\n        </span>\r\n        <el-dropdown-menu slot=\"dropdown\">\r\n          <el-dropdown-item command=\"updatePassword\">修改密码</el-dropdown-item>\r\n          <el-dropdown-item command=\"exit\">退出</el-dropdown-item>\r\n        </el-dropdown-menu>\r\n      </el-dropdown>\r\n    </div>\r\n    <el-dialog title=\"修改密码\" :visible.sync=\"dialogVisible\" width=\"30%\">\r\n      <el-form\r\n        :model=\"form\"\r\n        ref=\"form\"\r\n        :rules=\"rules\"\r\n        label-width=\"80px\"\r\n        :inline=\"false\"\r\n        size=\"normal\"\r\n      >\r\n        <el-form-item label=\"旧密码\" prop=\"oldPassword\">\r\n          <el-input v-model=\"form.oldPassword\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n          <el-input v-model=\"form.newPassword\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"checkPassword\">\r\n          <el-input v-model=\"form.checkPassword\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"onSubmit\">确定</el-button>\r\n          <el-button @click=\"cancel\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations, mapState } from \"vuex\";\r\nimport { verifyPwd, resetUserPwd } from \"@/api/system/user\";\r\nexport default {\r\n  data() {\r\n    // 验证密码\r\n    var checkPassword = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入密码\"));\r\n      }\r\n      verifyPwd(value).then((response) => {\r\n        if (response === true) {\r\n          callback();\r\n        } else {\r\n          callback(new Error(\"原密码错误\"));\r\n        }\r\n      });\r\n    };\r\n    var samePassword = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请再次输入密码\"));\r\n      } else if (value !== this.form.newPassword) {\r\n        callback(new Error(\"两次输入密码不一致!\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      dialogVisible: false,\r\n      form: {\r\n        oldPassword: \"\",\r\n        newPassword: \"\",\r\n        checkPassword: \"\",\r\n      },\r\n      rules: {\r\n        newPassword: [\r\n          { required: true, message: \"请输入新密码\", trigger: \"blur\" },\r\n        ],\r\n        oldPassword: [\r\n          { validator: checkPassword, trigger: \"blur\" },\r\n          { required: true, message: \"请输入新密码\", trigger: \"blur\" },\r\n        ],\r\n        checkPassword: [\r\n          { validator: samePassword, trigger: \"blur\" },\r\n          { required: true, message: \"请输入新密码\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    avatar() {\r\n      return (\r\n        this.$store.state.user.avatar || require(\"@/assets/user-default.png\")\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapMutations(\"tab\", [\"collapseMenu\"]),\r\n    onSubmit() {\r\n      resetUserPwd(this.form.newPassword).then(()=>{\r\n        this.$message({\r\n          showClose: true,\r\n          message: '修改成功，请重新登录',\r\n          type: 'success'\r\n        });\r\n        setTimeout(()=>{\r\n          handleLogout();\r\n        },1000);\r\n        handleLogout();\r\n      })\r\n    },\r\n    cancel() {\r\n      this.resetForm();\r\n      this.dialogVisible = false;\r\n    },\r\n    resetForm() {\r\n      this.form.oldPassword = \"\";\r\n      this.form.newPassword = \"\";\r\n      this.form.checkPassword = \"\";\r\n    },\r\n    handleLogout() {\r\n      this.$store\r\n        .dispatch(\"LogOut\")\r\n        .then((result) => {\r\n          this.$store.dispatch(\"FedLogOut\").then((result) => {\r\n            this.$router.push({ path: \"/login\" });\r\n          });\r\n        })\r\n        .catch((err) => {});\r\n    },\r\n    handleCommand(command) {\r\n      if (command === \"exit\") {\r\n        handleLogout();\r\n      }\r\n      if (command === \"updatePassword\") {\r\n        this.dialogVisible = true;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.header-container {\r\n  padding: 0 20px;\r\n  background-color: #333;\r\n  height: 60px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  .r-container {\r\n    .user {\r\n      width: 40px;\r\n      height: 40px;\r\n      border-radius: 50%;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}