{"ast":null,"code":"import { login, logout, getInfo } from '@/api/login';\nimport { setToken, removeToken } from '@/utils/auth';\nconst user = {\n  state: {\n    token: getToken(),\n    name: '',\n    avatar: getAvatar()\n  },\n  mutations: {\n    SET_TOKEN: (state, token) => {\n      state.token = token;\n    },\n    SET_NAME: (state, name) => {\n      state.name = name;\n    },\n    SET_AVATAR: (state, avatar) => {\n      state.avatar = avatar;\n    }\n  },\n  actions: {\n    // 登录\n    Login({\n      commit,\n      state\n    }, userInfo) {\n      const username = userInfo.userName.trim();\n      const password = userInfo.password;\n      return new Promise((resolve, reject) => {\n        login(username, password).then(res => {\n          setToken(res.token);\n          commit('SET_TOKEN', res.token);\n          const avatar = res.userInfo.avatar || require('@/assets/user-default.png');\n          commit('SET_AVATAR', avatar);\n          resolve();\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    // 获取用户信息\n    // GetInfo({ commit, state }) {\n    //   return new Promise((resolve, reject) => {\n    //     getInfo().then(res => {\n    //       const user = res.user\n    //       const avatar = user.avatar === '' ? require('@/assets/images/profile.jpg') : process.env.VUE_APP_BASE_API + user.avatar\n    //       if (res.roles && res.roles.length > 0) { // 验证返回的roles是否是一个非空数组\n    //         commit('SET_ROLES', res.roles)\n    //         commit('SET_PERMISSIONS', res.permissions)\n    //       } else {\n    //         commit('SET_ROLES', ['ROLE_DEFAULT'])\n    //       }\n    //       commit('SET_NAME', user.userName)\n    //       commit('SET_AVATAR', avatar)\n    //       resolve(res)\n    //     }).catch(error => {\n    //       reject(error)\n    //     })\n    //   })\n    // },\n\n    // 退出系统\n    LogOut({\n      commit,\n      state\n    }) {\n      return new Promise((resolve, reject) => {\n        logout(state.token).then(() => {\n          commit('SET_TOKEN', '');\n          commit('SET_ROLES', []);\n          commit('SET_PERMISSIONS', []);\n          removeToken();\n          resolve();\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    // 前端 登出\n    FedLogOut({\n      commit\n    }) {\n      return new Promise(resolve => {\n        commit('SET_TOKEN', '');\n        removeToken();\n        resolve();\n      });\n    }\n  }\n};\nexport default user;","map":{"version":3,"names":["login","logout","getInfo","setToken","removeToken","user","state","token","getToken","name","avatar","getAvatar","mutations","SET_TOKEN","SET_NAME","SET_AVATAR","actions","Login","commit","userInfo","username","userName","trim","password","Promise","resolve","reject","then","res","require","catch","error","LogOut","FedLogOut"],"sources":["E:/homework/src/store/model/user.js"],"sourcesContent":["import { login, logout, getInfo } from '@/api/login'\r\nimport {setToken, removeToken } from '@/utils/auth'\r\n\r\nconst user = {\r\n  state: {\r\n    token: getToken(),\r\n    name: '',\r\n    avatar: getAvatar(),\r\n  },\r\n\r\n  mutations: {\r\n    SET_TOKEN: (state, token) => {\r\n      state.token = token\r\n    },\r\n    SET_NAME: (state, name) => {\r\n      state.name = name\r\n    },\r\n    SET_AVATAR: (state, avatar) => {\r\n      state.avatar = avatar\r\n    },\r\n  },\r\n\r\n  actions: {\r\n    // 登录\r\n    Login({ commit,state }, userInfo) {\r\n      const username = userInfo.userName.trim()\r\n      const password = userInfo.password\r\n      return new Promise((resolve, reject) => {\r\n        login(username, password).then(res => {\r\n          setToken(res.token)\r\n          commit('SET_TOKEN', res.token)\r\n          const avatar = res.userInfo.avatar || require('@/assets/user-default.png')\r\n          commit('SET_AVATAR',avatar)\r\n          resolve()\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 获取用户信息\r\n    // GetInfo({ commit, state }) {\r\n    //   return new Promise((resolve, reject) => {\r\n    //     getInfo().then(res => {\r\n    //       const user = res.user\r\n    //       const avatar = user.avatar === '' ? require('@/assets/images/profile.jpg') : process.env.VUE_APP_BASE_API + user.avatar\r\n    //       if (res.roles && res.roles.length > 0) { // 验证返回的roles是否是一个非空数组\r\n    //         commit('SET_ROLES', res.roles)\r\n    //         commit('SET_PERMISSIONS', res.permissions)\r\n    //       } else {\r\n    //         commit('SET_ROLES', ['ROLE_DEFAULT'])\r\n    //       }\r\n    //       commit('SET_NAME', user.userName)\r\n    //       commit('SET_AVATAR', avatar)\r\n    //       resolve(res)\r\n    //     }).catch(error => {\r\n    //       reject(error)\r\n    //     })\r\n    //   })\r\n    // },\r\n\r\n    // 退出系统\r\n    LogOut({ commit, state }) {\r\n      return new Promise((resolve, reject) => {\r\n        logout(state.token).then(() => {\r\n          commit('SET_TOKEN', '')\r\n          commit('SET_ROLES', [])\r\n          commit('SET_PERMISSIONS', [])\r\n          removeToken()\r\n          resolve()\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 前端 登出\r\n    FedLogOut({ commit }) {\r\n      return new Promise(resolve => {\r\n        commit('SET_TOKEN', '')\r\n        removeToken()\r\n        resolve()\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default user\r\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,MAAM,EAAEC,OAAO,QAAQ,aAAa;AACpD,SAAQC,QAAQ,EAAEC,WAAW,QAAQ,cAAc;AAEnD,MAAMC,IAAI,GAAG;EACXC,KAAK,EAAE;IACLC,KAAK,EAAEC,QAAQ,EAAE;IACjBC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAEC,SAAS;EACnB,CAAC;EAEDC,SAAS,EAAE;IACTC,SAAS,EAAE,CAACP,KAAK,EAAEC,KAAK,KAAK;MAC3BD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDO,QAAQ,EAAE,CAACR,KAAK,EAAEG,IAAI,KAAK;MACzBH,KAAK,CAACG,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDM,UAAU,EAAE,CAACT,KAAK,EAAEI,MAAM,KAAK;MAC7BJ,KAAK,CAACI,MAAM,GAAGA,MAAM;IACvB;EACF,CAAC;EAEDM,OAAO,EAAE;IACP;IACAC,KAAK,CAAC;MAAEC,MAAM;MAACZ;IAAM,CAAC,EAAEa,QAAQ,EAAE;MAChC,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,QAAQ,CAACC,IAAI,EAAE;MACzC,MAAMC,QAAQ,GAAGJ,QAAQ,CAACI,QAAQ;MAClC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtC1B,KAAK,CAACoB,QAAQ,EAAEG,QAAQ,CAAC,CAACI,IAAI,CAACC,GAAG,IAAI;UACpCzB,QAAQ,CAACyB,GAAG,CAACrB,KAAK,CAAC;UACnBW,MAAM,CAAC,WAAW,EAAEU,GAAG,CAACrB,KAAK,CAAC;UAC9B,MAAMG,MAAM,GAAGkB,GAAG,CAACT,QAAQ,CAACT,MAAM,IAAImB,OAAO,CAAC,2BAA2B,CAAC;UAC1EX,MAAM,CAAC,YAAY,EAACR,MAAM,CAAC;UAC3Be,OAAO,EAAE;QACX,CAAC,CAAC,CAACK,KAAK,CAACC,KAAK,IAAI;UAChBL,MAAM,CAACK,KAAK,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACAC,MAAM,CAAC;MAAEd,MAAM;MAAEZ;IAAM,CAAC,EAAE;MACxB,OAAO,IAAIkB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtCzB,MAAM,CAACK,KAAK,CAACC,KAAK,CAAC,CAACoB,IAAI,CAAC,MAAM;UAC7BT,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;UACvBA,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;UACvBA,MAAM,CAAC,iBAAiB,EAAE,EAAE,CAAC;UAC7Bd,WAAW,EAAE;UACbqB,OAAO,EAAE;QACX,CAAC,CAAC,CAACK,KAAK,CAACC,KAAK,IAAI;UAChBL,MAAM,CAACK,KAAK,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IAED;IACAE,SAAS,CAAC;MAAEf;IAAO,CAAC,EAAE;MACpB,OAAO,IAAIM,OAAO,CAACC,OAAO,IAAI;QAC5BP,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;QACvBd,WAAW,EAAE;QACbqB,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF;AACF,CAAC;AAED,eAAepB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}